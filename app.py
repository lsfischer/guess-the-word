import regex
import random
import pandas as pd
from generator import generate_sentence
from word_predictor import get_bert_prediction


def get_random_sentence() -> str:
    """Get a random sentence from the dataset of sentences"""

    df = pd.read_csv("./assets/sentences.csv", index_col=0)
    return df["sentence"].sample(1).item()


def mask_random_word(input_sentence: str, generated_sentence: str) -> (str, str):
    """
    Mask one of the words in the generated part of the sentence

    Params
    ------
        input_sentence: The original sentence
        generated_sentence: The original sentence plus the part that was generated by GPT-2

    Returns
    -------
        A new sentence, the same as generated_sentence but with one of the words replaced with [MASK] to be sent to BERT
    """
    generated_part = generated_sentence[len(input_sentence) :]

    words = regex.findall("(\w+)", generated_part)
    words_indexed = list(enumerate(words))
    mask_index, masked_word = random.choice(words_indexed)

    words[mask_index] = "[MASK]"
    return input_sentence + " " + " ".join(words), masked_word


if __name__ == "__main__":
    input_sentence = input(
        "Enter an initial sentence or press enter for a random one\n"
    )

    input_sentence = input_sentence if input_sentence != "" else get_random_sentence()
    generated_sentence = generate_sentence(input_sentence)
    masked_sentence, target = mask_random_word(input_sentence, generated_sentence)
    print(f"Sentence: {masked_sentence}")

    predictions = get_bert_prediction(masked_sentence)
    bert_prediction = predictions
    guess = input("Guess the masked word:\n")
    if guess.lower() == target.lower():
        if bert_prediction.lower() == target.lower():
            print(f"You're both correct!")
        else:
            print(f"You win! BERT thought it was '{bert_prediction}'")
    else:
        if bert_prediction.lower() != target.lower():
            print(
                f"You're both wrong, it was '{target}'. BERT thought it was '{bert_prediction}'"
            )
        print(f"You lose, BERT got it right. It was '{target}'")
